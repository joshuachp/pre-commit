##
# Rust
#
# Check
- id: rust-fmt
  name: format rust
  description: Format files with cargo fmt.
  entry: cargo fmt
  language: system
  types: [rust]
  args: ["--"]
- id: rust-check
  name: check rust
  description: Check the package for errors.
  entry: cargo check
  args: ["--all-targets", "--all-features", "--workspace", "--", "-D", "warnings"]
  language: system
  types: [rust]
  pass_filenames: false
- id: rust-clippy
  name: check rust clippy
  description: Lint rust sources
  entry: cargo clippy
  language: system
  args: ["--all-targets", "--all-features", "--workspace", "--", "-D", "warnings"]
  types: [rust]
  pass_filenames: false
- id: rust-doc
  name: rust docs
  description: Build the documentation
  entry: env RUSTDOCFLAGS='--cfg docsrs -D warnings' cargo doc
  args: ["--no-deps", "--all-features", "--workspace"]
  types: ["rust"]
  language: system
  pass_filenames: false
- id: rust-hack
  name: check all features
  description: Use cargo-hack to check all features with clippy
  entry: cargo hack
  args: ["--feature-powerset", "--workspace", "check"]
  types: [rust]
  language: system
  pass_filenames: false
- id: rust-sqlx
  name: check sqlx queries
  description: Check that the sqlx queries are up to date
  entry: cargo sqlx
  args: ["prepare", "--check"]
  types: [rust, sql]
  language: system
  pass_filenames: false
# Test
- id: rust-test
  name: test rust
  description: Run the project test suite
  entry: cargo test
  args: ["--all-targets", "--all-features", "--workspace"]
  language: system
  types: [rust]
  pass_filenames: false
- id: rust-test-doc
  name: test rust doc
  description: Run the project test suite
  entry: cargo test --doc
  args: ["--all-features", "--workspace"]
  language: system
  types: [rust]
  pass_filenames: false
- id: rust-build
  name: build rust
  description: Build the project
  entry: cargo build
  args: ["--all-features", "--all-targets", "--workspace"]
  language: system
  types: [rust]
  pass_filenames: false
##
# PHP
#
- id: php-cs-fixer
  name: format php
  description: Fix PHP Code Standard
  entry: vendor/bin/php-cs-fixer fix
  language: system
  types: [php]
  pass_filenames: true
- id: php-stan
  name: check php
  description: PHP Static Analysis
  entry: vendor/bin/phpstan analyse
  language: system
  types: [php]
  pass_filenames: true
##
# Nix
#
- id: nix-flake-check
  name: check nix flake
  description: Check the flake.nix file for errors
  entry: nix flake check
  language: system
  files: "^(flake\\.lock|.*\\.nix)$"
  types: [file]
  pass_filenames: false
- id: nix-nixpkgs-fmt
  name: format nix nixpkgs-fmt
  description: Format nix package with nixpkgs-fmt
  entry: nixpkgs-fmt
  language: system
  types: [nix]
  pass_filenames: true
- id: nix-nixfmt
  name: format nix nixfmt
  description: Format nix package with nixfmt
  entry: nixfmt --check
  language: system
  types: [nix]
  pass_filenames: true
- id: nix-alejandra
  name: format nix alejandra
  description: Format nix package with alejandra
  entry: alejandra
  language: system
  types: [nix]
  pass_filenames: true
- id: nix-statix
  name: check nix statix
  description: Link nix code with statix
  entry: statix check
  language: system
  types: [nix]
  pass_filenames: false
- id: nix-build
  name: nix build
  description: Build the package with nix
  entry: nix build
  language: system
  pass_filenames: false
##
# JavaScript/TypeScript
#
- id: js-yarn-run
  name: yarn run
  description: "Run a custom Yarn command"
  entry: yarn
  language: system
  types_or: [javascript, jsx, ts, tsx, json]
  pass_filenames: true
- id: js-yarn-run-filenames
  name: yarn run with filenames
  description: "Run a custom Yarn command, passing the filenames"
  entry: yarn
  language: system
  types_or: [javascript, jsx, ts, tsx, json]
  pass_filenames: true
##
# Lua
#
- id: lua-stylua
  name: format lua
  description: "Format Lua files with Stylua"
  entry: stylua
  types: [lua]
  language: system
  pass_filenames: true
